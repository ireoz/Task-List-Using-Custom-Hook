{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst Usehttp = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async (requestInfo, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://reactdb-9d4c7-default-rtdb.europe-west1.firebasedatabase.app/tasks.json', {\n        method: requestInfo.method ? requestInfo.method : 'GET',\n        body: requestInfo.body ? JSON.stringify(requestInfo.body) : null,\n        headers: requestInfo.headers ? requestInfo.headers : {}\n      });\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      console.log(data);\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(Usehttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\n_c = Usehttp;\nexport default Usehttp;\nvar _c;\n$RefreshReg$(_c, \"Usehttp\");","map":{"version":3,"names":["useCallback","useState","Usehttp","isLoading","setIsLoading","error","setError","sendRequest","requestInfo","applyData","response","fetch","method","body","JSON","stringify","headers","ok","Error","data","json","console","log","err","message"],"sources":["C:/Users/Andre/OneDrive/Desktop/web/react/CustomHook/04-onwards-to-a-more-realistic-example/src/Hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\n\r\nconst Usehttp = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const sendRequest =  useCallback(async (requestInfo,applyData) => {\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        'https://reactdb-9d4c7-default-rtdb.europe-west1.firebasedatabase.app/tasks.json',\r\n        {\r\n            method: requestInfo.method ? requestInfo.method : 'GET',\r\n            body: requestInfo.body ? JSON.stringify(requestInfo.body) : null,\r\n            headers: requestInfo.headers ? requestInfo.headers : {}\r\n        }\r\n            );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Request failed!');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n      applyData(data)\r\n\r\n    } catch (err) {\r\n      setError(err.message || 'Something went wrong!');\r\n    }\r\n    setIsLoading(false);\r\n    \r\n    },[])\r\n\r\n    return { isLoading, error, sendRequest};\r\n}\r\n\r\nexport default Usehttp;"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMM,WAAW,GAAIP,WAAW,CAAC,OAAOQ,WAAW,EAACC,SAAS,KAAK;IAElEL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iFAAiF,EACjF;QACIC,MAAM,EAAEJ,WAAW,CAACI,MAAM,GAAGJ,WAAW,CAACI,MAAM,GAAG,KAAK;QACvDC,IAAI,EAAEL,WAAW,CAACK,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACP,WAAW,CAACK,IAAI,CAAC,GAAG,IAAI;QAChEG,OAAO,EAAER,WAAW,CAACQ,OAAO,GAAGR,WAAW,CAACQ,OAAO,GAAG,CAAC;MAC1D,CAAC,CACI;MAEP,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBV,SAAS,CAACU,IAAI,CAAC;IAEjB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZjB,QAAQ,CAACiB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACApB,YAAY,CAAC,KAAK,CAAC;EAEnB,CAAC,EAAC,EAAE,CAAC;EAEL,OAAO;IAAED,SAAS;IAAEE,KAAK;IAAEE;EAAW,CAAC;AAC3C,CAAC;AAAA,GAlCKL,OAAO;AAAA,KAAPA,OAAO;AAoCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}